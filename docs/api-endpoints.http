### Bagman API - HTTP Requests for Rider HTTP Client

# Base URL
@baseUrl = http://localhost:5000

### ========================================
### TABLES ENDPOINTS
### ========================================

# Get all tables for current user
GET {{baseUrl}}/api/tables
Authorization: Bearer {{authToken}}

###

# Get specific table by ID
GET {{baseUrl}}/api/tables/{{tableId}}
Authorization: Bearer {{authToken}}

###

# Create new table
POST {{baseUrl}}/api/tables
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "name": "EURO 2024 Group A",
  "password": "secret123",
  "maxPlayers": 20,
  "stake": 10.00,
  "isSecretMode": true
}

###

# Update table
PUT {{baseUrl}}/api/tables/{{tableId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "name": "Updated Table Name",
  "maxPlayers": 25,
  "stake": 15.00,
  "isSecretMode": false
}

###

# Delete table
DELETE {{baseUrl}}/api/tables/{{tableId}}
Authorization: Bearer {{authToken}}

###

# Join table
POST {{baseUrl}}/api/tables/{{tableId}}/join
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "password": "secret123"
}

###

# Leave table
POST {{baseUrl}}/api/tables/{{tableId}}/leave
Authorization: Bearer {{authToken}}

###

### ========================================
### MATCHES ENDPOINTS
### ========================================

# Get all matches for a table
GET {{baseUrl}}/api/matches/table/{{tableId}}
Authorization: Bearer {{authToken}}

###

# Get upcoming matches for a table
GET {{baseUrl}}/api/matches/table/{{tableId}}/upcoming
Authorization: Bearer {{authToken}}

###

# Get finished matches for a table
GET {{baseUrl}}/api/matches/table/{{tableId}}/finished
Authorization: Bearer {{authToken}}

###

# Get specific match by ID
GET {{baseUrl}}/api/matches/{{matchId}}
Authorization: Bearer {{authToken}}

###

# Create new match
POST {{baseUrl}}/api/matches
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "tableId": "{{tableId}}",
  "country1": "Poland",
  "country2": "Germany",
  "matchDateTime": "2024-06-15T20:00:00Z"
}

###

# Start match (Admin only)
POST {{baseUrl}}/api/matches/{{matchId}}/start
Authorization: Bearer {{authToken}}

###

# Finish match with result (Admin only)
POST {{baseUrl}}/api/matches/{{matchId}}/finish
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "result": "2:1"
}

###

# Delete match (Admin only)
DELETE {{baseUrl}}/api/matches/{{matchId}}
Authorization: Bearer {{authToken}}

###

# Place bet on match
POST {{baseUrl}}/api/matches/{{matchId}}/bet
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "prediction": "1:0"
}

###

# Get all bets for a match
GET {{baseUrl}}/api/matches/{{matchId}}/bets
Authorization: Bearer {{authToken}}

###

### ========================================
### BETS ENDPOINTS
### ========================================

# Place bet
POST {{baseUrl}}/api/bets
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "matchId": "{{matchId}}",
  "prediction": "2:1"
}

###

# Update bet
PUT {{baseUrl}}/api/bets/{{betId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "prediction": "1:1"
}

###

# Get specific bet
GET {{baseUrl}}/api/bets/{{betId}}
Authorization: Bearer {{authToken}}

###

# Get all bets for a match
GET {{baseUrl}}/api/bets/match/{{matchId}}
Authorization: Bearer {{authToken}}

###

# Get all bets for a user
GET {{baseUrl}}/api/bets/user/{{userId}}
Authorization: Bearer {{authToken}}

###

# Delete bet
DELETE {{baseUrl}}/api/bets/{{betId}}
Authorization: Bearer {{authToken}}

###

### ========================================
### POOLS ENDPOINTS
### ========================================

# Get pool by ID
GET {{baseUrl}}/api/pools/{{poolId}}
Authorization: Bearer {{authToken}}

###

# Get pool by match ID
GET {{baseUrl}}/api/pools/match/{{matchId}}
Authorization: Bearer {{authToken}}

###

# Get all active pools
GET {{baseUrl}}/api/pools/active
Authorization: Bearer {{authToken}}

###

# Get all expired pools
GET {{baseUrl}}/api/pools/expired
Authorization: Bearer {{authToken}}

###

# Calculate pool amount for a match
POST {{baseUrl}}/api/pools/match/{{matchId}}/calculate
Authorization: Bearer {{authToken}}

###

# Distribute pool to winners
POST {{baseUrl}}/api/pools/match/{{matchId}}/distribute
Authorization: Bearer {{authToken}}
Content-Type: application/json

[
  "user1-id",
  "user2-id",
  "user3-id"
]

###

# Rollover pool to next match
POST {{baseUrl}}/api/pools/match/{{matchId}}/rollover
Authorization: Bearer {{authToken}}

###

# Get user winnings for a match
GET {{baseUrl}}/api/pools/match/{{matchId}}/winnings/{{userId}}
Authorization: Bearer {{authToken}}

###

### ========================================
### AUTHENTICATION ENDPOINTS
### ========================================

# Register new user
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "login": "testuser",
  "email": "pietruczukhubert@gmail.com",
  "password": "password123456"
}

###

# Login user
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "login": "testuser",
  "password": "password123456"
}

> {%
    client.global.set("authToken", response.body.accessToken);
    client.global.set("refreshToken", response.body.refreshToken);
%}
###

# Refresh token
POST {{baseUrl}}/api/auth/refresh
Content-Type: application/json

{
  "refreshToken": "{{refreshToken}}"
}

###

# Logout user
POST {{baseUrl}}/api/auth/logout
Authorization: Bearer {{authToken}}

###

# Get current user info
GET {{baseUrl}}/api/auth/me
Authorization: Bearer {{authToken}}

###

### ========================================
### USAGE NOTES
### ========================================

# 1. Replace {{authToken}} with your actual JWT token
# 2. Replace {{tableId}}, {{matchId}}, {{betId}}, {{poolId}}, {{userId}} with actual IDs
# 3. All endpoints require authentication (Bearer token)
# 4. Admin endpoints require admin role
# 5. Some endpoints are restricted to table members only

# Example workflow:
# 1. Login to get JWT token
# 2. Create a table
# 3. Join the table (if secret)
# 4. Create matches
# 5. Place bets
# 6. Start/finish matches
# 7. Distribute pools

# Common HTTP Status Codes:
# 200 - OK
# 201 - Created
# 204 - No Content
# 400 - Bad Request
# 401 - Unauthorized
# 403 - Forbidden
# 404 - Not Found
# 500 - Internal Server Error

